---
title: 08 그래프 만들기
jupyter:
  jupytext:
    cell_metadata_filter: 'eval,name,warning,fig.show,tags,echo,message,-all'
    notebook_metadata_filter: '-all'
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{python}
# 그래프 해상도 설정
import matplotlib.pyplot as plt
plt.rcParams.update({'figure.dpi' : '100'})
%config InlineBackend.figure_format = 'retina'
```

```{python}
%%html
<!--마크다운 표 정렬 설정-->
<style> table {float:left} </style>
```

---



## 08-1 파이썬으로 만들 수 있는 그래프 살펴보기

## 08-2 산점도 - 변수 간 관계 표현하기

### 산점도 만들기

```{python}
#| eval: false
import pandas as pd
mpg = pd.read_csv('mpg.csv')
```

```{python}
#| eval: false
# x축은 displ, y축은 hwy를 나타낸 산점도 만들기
import seaborn as sns
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy')
```

#### 축 범위 설정하기

```{python}
#| eval: false
# x축 범위 3~6으로 제한
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy') \
   .set(xlim = [3, 6])
```

```{python}
#| eval: false
# x축 범위 3~6, y축 범위 10~30으로 제한
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy') \
   .set(xlim = [3, 6], ylim = [10, 30])
```

#### 종류별로 표식 색깔 바꾸기

```{python}
#| fig.show: hide
# drv별로 표식 색깔 다르게 표현
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy', hue = 'drv')
```

------------------------------------------------------------------------

#### (알아 두면 좋아요) 그래프 활용하기

**그래프 설정 바꾸기**

```{python}
#| eval: false
import matplotlib.pyplot as plt
plt.rcParams.update({'figure.dpi' : '150'})             # 해상도, 기본값 72
plt.rcParams.update({'figure.figsize' : [8, 6]})        # 그림 크기, 기본값 [6, 4]
plt.rcParams.update({'font.size' : '15'})               # 글자 크기, 기본값 10
plt.rcParams.update({'font.family' : 'Malgun Gothic'})  # 폰트, 기본값 sans-serif
```

```{python}
#| eval: false
plt.rcParams.update({'figure.dpi'     : '150',  
                     'figure.figsize' : [8, 6],
                     'font.size'      : '15',
                     'font.family'    : 'Malgun Gothic'})
```

**설정 되돌리기**

```{python}
#| eval: false
# 모든 설정 되돌리기
plt.rcParams.update(plt.rcParamsDefault)
```

**설명 메시지 숨기기**

```{python}
#| eval: false
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy');
```

---

```{python}
# 그래프 해상도 재설정
plt.rcParams.update({'figure.dpi' : '100'})
```

## 08-3 막대 그래프 - 집단 간 차이 표현하기

### 평균 막대 그래프 만들기

#### 1. 집단별 평균표 만들기

```{python}
df_mpg = mpg.groupby('drv') \
            .agg(mean_hwy = ('hwy', 'mean'))
df_mpg
```

```{python}
# drv별 분리
# hwy 평균 구하기
df_mpg = mpg.groupby('drv', as_index = False) \
            .agg(mean_hwy = ('hwy', 'mean'))
df_mpg
```

#### 2. 그래프 만들기

```{python}
#| fig.show: hide
sns.barplot(data = df_mpg, x = 'drv', y = 'mean_hwy')
```

#### 3. 크기순으로 정렬하기

```{python}
#| fig.show: hide
# 데이터 프레임 정렬하기
df_mpg = df_mpg.sort_values('mean_hwy', ascending = False)

# 막대 그래프 만들기
sns.barplot(data = df_mpg, x = 'drv', y = 'mean_hwy')
```

### 빈도 막대 그래프 만들기

#### 1. 집단별 빈도표 만들기

```{python}
#| fig.show: hide
# 집단별 빈도표 만들기
df_mpg = mpg.groupby('drv', as_index = False) \
            .agg(n = ('drv', 'count'))

df_mpg
```

#### 2. 그래프 만들기

```{python}
#| fig.show: hide
# 막대 그래프 만들기
sns.barplot(data = df_mpg, x = 'drv', y = 'n')
```

#### sns.countplot()으로 빈도 막대 그래프 만들기

```{python}
#| eval: false
# 빈도 막대 그래프 만들기
sns.countplot(data = mpg, x = 'drv')
```

```{python}
mpg['drv'].unique()
```

```{python}
df_mpg['drv'].unique()
```

**막대 정렬하기**

```{python}
#| eval: false
# 4, f, r 순으로 막대 정렬
sns.countplot(data = mpg, x = 'drv', order = ['4', 'f', 'r'])
```

```{python}
# drv의 값을 빈도가 높은 순으로 출력
mpg['drv'].value_counts().index
```

```{python}
#| eval: false
# drv 빈도 높은 순으로 막대 정렬
sns.countplot(data = mpg, x = 'drv', order = mpg['drv'].value_counts().index)
```

## 08-4 선 그래프 - 시간에 따라 달라지는 데이터 표현하기

### 시계열 그래프 만들기

```{python}
#| eval: false
# economics 데이터 불러오기
economics = pd.read_csv('economics.csv')
economics.head()
```

```{python}
#| eval: false
sns.lineplot(data = economics, x = 'date', y = 'unemploy')
```

#### x축에 연도 표시하기

**(1) 날짜 시간 타입 변수 만들기**

```{python}
# 날짜 시간 타입 변수 만들기
economics['date2'] = pd.to_datetime(economics['date'])

# 변수 타입 확인
economics.info()
```

```{python}
economics[['date', 'date2']]
```

```{python}
# 연 추출
economics['date2'].dt.year
```

```{python}
# 월 추출
economics['date2'].dt.month
```

```{python}
# 일 추출
economics['date2'].dt.day
```

**(2) 연도 변수 만들기**

```{python}
# 연도 변수 추가
economics['year'] = economics['date2'].dt.year
economics.head()
```

**(3) x축에 연도 표시하기**

```{python}
#| eval: false
# x축에 연도 표시
sns.lineplot(data = economics, x = 'year', y = 'unemploy')
```

```{python}
#| eval: false
# 신뢰구간 제거
sns.lineplot(data = economics, x = 'year', y = 'unemploy', ci = None)
```

## 08-5 상자 그림 - 집단 간 분포 차이 표현하기

### 상자 그림 만들기

```{python}
#| eval: false
sns.boxplot(data = mpg, x = 'drv', y = 'hwy')
```

------------------------------------------------------------------------

#### (알아 두면 좋아요) `seaborn` 더 알아보기

**한글 표현하기**

```{python}
#| eval: false
# 맑은 고딕 폰트 설정
import matplotlib.pyplot as plt
plt.rcParams.update({'font.family' : 'Malgun Gothic'})
```

------------------------------------------------------------------------

### 정리하기

| seaborn 함수      | 그래프                    |
|-------------------|---------------------------|
| sns.scatterplot() | 산점도                    |
| sns.barplot()     | 막대 그래프 - 요약표 활용 |
| sns.countplot()   | 막대 그래프 - 원자료 활용 |
| sns.lineplot()    | 선 그래프                 |
| sns.boxplot()     | 상자 그림                 |

```{python}
#| eval: false
#| tags: []
### 1. 산점도
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy')

# 축 제한
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy') \
   .set(xlim = [3, 6], ylim = [10, 30])

# 종류별로 표식 색깔 바꾸기
sns.scatterplot(data = mpg, x = 'displ', y = 'hwy', hue = 'drv')


### 2. 막대 그래프

## 평균 막대 그래프

# 1단계. 평균표 만들기
df_mpg = mpg.groupby('drv', as_index = False) \
            .agg(mean_hwy = ('hwy', 'mean'))

# 2단계. 그래프 만들기
sns.barplot(data = df_mpg, x = 'drv', y = 'mean_hwy')

## 빈도 막대 그래프
sns.countplot(data = mpg, x = 'drv')


### 3. 선 그래프
sns.lineplot(data = economics, x = 'date', y = 'unemploy')


### 4. 상자 그림
sns.boxplot(data = mpg, x = 'drv', y = 'hwy')
```

