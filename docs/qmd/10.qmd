---
title: '**넷째마당. 다양한 데이터 분석의 세계**'
jupyter:
  jupytext:
    cell_metadata_filter: 'eval,name,error,fig.show,tags,echo,-all'
    notebook_metadata_filter: '-all'
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

```{python}
# 그래프 해상도 설정
import matplotlib.pyplot as plt
plt.rcParams.update({'figure.dpi' : '300'})
%config InlineBackend.figure_format = 'retina'
```

---

---
---


# 10 텍스트 마이닝

## 10-1 대통령 연설문 텍스트 마이닝

### `KoNLPy` 패키지 설치하기

#### 1. 자바 설치하기

#### 2. `KoNLPy` 의존성 패키지 설치하기

pip install jpype1

#### 3. `KoNLPy` 설치하기

pip install konlpy

### 가장 많이 사용된 단어 알아보기

#### 1. 연설문 불러오기

```{python}
#| eval: false
moon = open('speech_moon.txt', encoding = 'UTF-8').read()
moon
```

#### 2. 불필요한 문자 제거하기

```{python}
#| eval: false
# 불필요한 문자 제거하기
import re
moon = re.sub('[^가-힣]', ' ', moon)
moon
```

#### 3. 명사 추출하기

```{python}
# hannanum 만들기
import konlpy
hannanum = konlpy.tag.Hannanum()
```

```{python}
# 명사 추출하기
hannanum.nouns("대한민국의 영토는 한반도와 그 부속도서로 한다")
```

```{python}
#| eval: false
# 연설문에서 명사 추출하기
nouns = hannanum.nouns(moon)
# nouns
```

```{python}
# 데이터 프레임으로 변환
import pandas as pd
df_word = pd.DataFrame({'word' : nouns})
df_word
```

#### 4. 단어 빈도표 만들기

```{python}
# 글자 수 추가
df_word['count'] = df_word['word'].str.len()
df_word
```

```{python}
# 두 글자 이상 단어만 남기기
df_word = df_word.query('count >= 2')
df_word.sort_values('count')
```

```{python}
## 단어 빈도 구하기

# 단어별 분리
# 빈도 구하기
# 내림차순 정렬
df_word = df_word.groupby('word', as_index = False) \
                 .agg(n = ('word', 'count')) \
                 .sort_values('n', ascending = False)
df_word
```

#### 5. 단어 빈도 막대 그래프 만들기

```{python}
# 단어 빈도 상위 20개 추출
top20 = df_word.head(20)
top20
```

```{python}
#| eval: false
#| fig.show: hide
import seaborn as sns
import matplotlib.pyplot as plt

plt.rcParams.update({'font.family'    : 'Malgun Gothic',  # 한글 폰트 설정
                     'figure.dpi'     : '120',            # 해상도 설정
                     'figure.figsize' : [6.5, 6]})        # 가로 세로 크기 설정

# 막대 그래프 만들기
sns.barplot(data = top20, y = 'word', x = 'n')
```

### 워드 클라우드 만들기

#### 1. `wordcloud` 패키지 설치하기

pip install wordcloud

#### 2. 한글 폰트 설정하기

```{python}
#| eval: false
font = 'DoHyeon-Regular.ttf'
```

#### 3. 단어와 빈도를 담은 딕셔너리 만들기

```{python}
#| eval: false
# 데이터 프레임을 딕셔너리로 변환
dic_word = df_word.set_index('word').to_dict()['n']
# dic_word
```

#### 4. 워드 클라우드 만들기

```{python}
#| eval: false
# wc 만들기
from wordcloud import WordCloud
wc = WordCloud(random_state = 1234,         # 난수 고정
               font_path = font,            # 폰트 설정
               width = 400,                 # 가로 크기
               height = 400,                # 세로 크기
               background_color = 'white')  # 배경색
```

```{python}
#| eval: false
# 워드 클라우드 만들기
img_wordcloud = wc.generate_from_frequencies(dic_word)

# 워드 클라우드 출력하기
plt.figure(figsize = (10, 10))  # 가로, 세로 크기 설정
plt.axis('off')                 # 테두리 선 없애기
plt.imshow(img_wordcloud)       # 워드 클라우드 출력
```

### 워드 클라우드 모양 바꾸기

#### 1. mask 만들기

```{python}
#| eval: false
import PIL
icon = PIL.Image.open('cloud.png')
```

```{python}
import numpy as np
img = PIL.Image.new('RGB', icon.size, (255, 255, 255))
img.paste(icon, icon)
img = np.array(img)
```

#### 2. 워드 클라우드 만들기

```{python}
#| eval: false
# wc 만들기
wc = WordCloud(random_state = 1234,         # 난수 고정
               font_path = font,            # 폰트 설정
               width = 400,                 # 가로 크기
               height = 400,                # 세로 크기
               background_color = 'white',  # 배경색
               mask = img)                  # mask 설정
```

```{python}
#| eval: false
# 워드 클라우드 만들기
img_wordcloud = wc.generate_from_frequencies(dic_word)

# 워드 클라우드 출력하기
plt.figure(figsize = (10, 10))  # 가로, 세로 크기 설정
plt.axis('off')                 # 테두리 선 없애기
plt.imshow(img_wordcloud)       # 워드 클라우드 출력
```

### 워드 클라우드 색깔 바꾸기

```{python}
#| eval: false
# wc 만들기
wc = WordCloud(random_state = 1234,         # 난수 고정
               font_path = font,            # 폰트 설정
               width = 400,                 # 가로 크기
               height = 400,                # 세로 크기
               background_color = 'white',  # 배경색
               mask = img,                  # mask 설정
               colormap = 'inferno')        # 컬러맵 설정
```

```{python}
#| eval: false
# 워드 클라우드 만들기
img_wordcloud = wc.generate_from_frequencies(dic_word)

# 워드 클라우드 출력하기
plt.figure(figsize = (10, 10))  # 가로, 세로 크기 설정
plt.axis('off')                 # 테두리 선 없애기
plt.imshow(img_wordcloud)       # 워드 클라우드 출력
```

## 10-2 기사 댓글 텍스트 마이닝

### 가장 많이 사용된 단어 알아보기

#### 1. 기사 댓글 불러오기

```{python}
#| eval: false
# 데이터 불러오기
df = pd.read_csv('news_comment_BTS.csv', encoding = 'UTF-8')
```

```{python}
#| eval: false
# 데이터 살펴보기
df.info()
```

#### 2. 불필요한 문자 제거하기

```{python}
# 불필요한 문자 제거하기
df['reply'] = df['reply'].str.replace('[^가-힣]', ' ', regex = True)
df['reply'].head()
```

#### 3. 명사 추출하기

```{python}
# kkma 만들기
import konlpy
kkma = konlpy.tag.Kkma()
```

```{python}
# 명사 추출 - apply() 활용
nouns = df['reply'].apply(kkma.nouns)
nouns
```

#### 4. 단어 빈도표 만들기

```{python}
# 한 행에 한 단어가 들어가도록 구성
nouns = nouns.explode()
nouns
```

```{python}
# 데이터 프레임 만들기
df_word = pd.DataFrame({'word' : nouns})

# 글자 수 추가
df_word['count'] = df_word['word'].str.len()

# 두 글자 이상 단어만 남기기
df_word = df_word.query('count >= 2')
df_word
```

```{python}
## 빈도표 만들기

# 단어별 분리
# 빈도 구하기
# 내림차순 정렬
df_word = df_word.groupby('word', as_index = False) \
                 .agg(n = ('word', 'count')) \
                 .sort_values('n', ascending = False)
df_word
```

#### 5. 단어 빈도 막대 그래프 만들기

```{python}
# 단어 빈도 상위 20개 추출
top20 = df_word.head(20)
top20
```

```{python}
#| eval: false
#| fig.show: hide
# 가로 세로 크기 설정
plt.rcParams.update({'figure.figsize': [6.5, 6]})

# 막대 그래프 만들기
sns.barplot(data = top20, y = 'word', x = 'n')
```

### 워드 클라우드 만들기

```{python}
# 데이터 프레임을 딕셔너리로 변환
dic_word = df_word.set_index('word').to_dict()['n']
```

```{python}
#| eval: false
# wc 만들기
wc = WordCloud(random_state = 1234,         # 난수 고정
               font_path = font,            # 폰트 설정
               width = 400,                 # 가로 크기
               height = 400,                # 세로 크기
               background_color = 'white',  # 배경색
               mask = img)                  # mask 설정
```

```{python}
#| eval: false
# 워드 클라우드 만들기
img_wordcloud = wc.generate_from_frequencies(dic_word)

# 워드 클라우드 출력하기
plt.figure(figsize = (10, 10))  # 가로, 세로 크기 설정
plt.axis('off')                 # 테두리 선 없애기
plt.imshow(img_wordcloud)       # 워드 클라우드 출력
```

